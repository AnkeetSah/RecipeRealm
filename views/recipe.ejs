<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recipe Page</title>
    <link rel="icon" type="image/png" href="./images/appLogo/fav.png">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* Reset some default browser styles */
        * {
            padding: 0;
            margin: 0;
            box-sizing: border-box;
        }

        body, h1, p, ul,  a {
            margin: 0;
            padding: 0;
            list-style: none;
            text-decoration: none;
            box-sizing: border-box;
        }

        /* General body styling */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #fff;
            background-color: #121212;
            line-height: 1.6;
        }

        /* Header styling */
        header {
            background-color: #1b1b1b;
            padding: 10px 20px;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
        }

        .logo {
            font-size: 24px;
            font-weight: bold;
            color: #00ff00;
        }

        .nav-links {
            display: flex;
            gap: 25px;
        }

        .nav-links a {
            color: #fff;
            transition: color 0.3s;
            font-weight: 500;
            padding: 5px 10px;
            border-radius: 4px;
        }

        .nav-links a:hover {
            color: #00ff00;
            background-color: rgba(0, 255, 0, 0.1);
        }

        .menu-icon {
            display: none;
            font-size: 24px;
            cursor: pointer;
            color: #fff;
            transition: color 0.3s;
        }

        .menu-icon:hover {
            color: #00ff00;
        }

        /* Container styling */
        .container {
            width: 90%;
            max-width: 1200px;
            margin: 100px auto 0;
            padding: 20px;
            background-color: #1b1b1b;
            color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .head {
            display: flex;
            justify-content: space-between;
            background: linear-gradient(135deg, #333 0%, #444 100%);
            border-radius: 10px;
            padding: 30px;
            flex-wrap: wrap;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            margin-bottom: 30px;
            gap: 20px;
        }

        .headchild {
            width: 48%;
            display: flex;
            flex-direction: column;
        }

        .recipe-image {
            width: 100%;
            height: 400px;
            border-radius: 10px;
            object-fit: cover;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }

        .about-section {
            margin-top: 0;
            padding: 0;
        }

        .about-section h2 {
            font-size: 32px;
            color: #00ff00;
            margin-bottom: 15px;
            font-weight: 700;
        }

        .recipe-meta {
            display: flex;
            gap: 15px;
            margin: 20px 0;
        }

        .meta-item {
            display: flex;
            align-items: center;
            gap: 5px;
            background: rgba(255, 255, 255, 0.1);
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 14px;
        }

        .likes {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        .likes a {
            color: white;
            cursor: pointer;
            padding: 12px 20px;
            background: #444;
            border-radius: 5px;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 500;
        }

        .likes a:hover {
            background: #555;
            transform: translateY(-2px);
        }

        .likes a.saved {
            background: #00aa00;
        }

        .chef-quote {
            display: flex;
            margin-top: 40px;
            align-items: center;
            background: rgba(0, 255, 0, 0.1);
            padding: 20px;
            border-radius: 10px;
            border-left: 4px solid #00ff00;
        }

        .chef-icon {
            height: 80px;
            width: 80px;
            margin-right: 20px;
        }

        .chef-quote h1 {
            font-size: 18px;
            font-style: italic;
            margin: 0;
            color: #ddd;
        }

        .ingredients {
            width: 40%;
            background: linear-gradient(135deg, #333 0%, #444 100%);
            min-height: 600px;
            max-height: auto;
            border-radius: 10px;
            padding: 30px;
            margin-right: 40px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }

        .instructions {
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            width: 55%;
            background: linear-gradient(135deg, #333 0%, #444 100%);
            min-height: 600px;
            max-height: auto;
            border-radius: 10px;
            padding: 30px;
        }

        .Recipe {
            margin-top: 30px;
            height: auto;
            display: flex;
        }

        .section-title {
            font-size: 24px;
            color: #00ff00;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #00ff00;
        }

        .items {
            margin-bottom: 20px;
            font-weight: bold;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .ingredient-item {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .ingredient-icon {
            width: 25px;
            height: 25px;
        }

        .ingredient-image {
            height: 30px;
            border-radius: 4px;
        }

        .measure {
            background: rgba(0, 255, 0, 0.2);
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 14px;
        }

        .instruction-steps {
            margin-left: 20px;
        }

        .instruction-steps li {
            margin-bottom: 20px;
            padding-left: 10px;
            line-height: 1.7;
        }

        .instruction-steps li::marker {
            color: #00ff00;
            font-weight: bold;
        }

        .video-section {
            margin-top: 40px;
            text-align: center;
            background: linear-gradient(135deg, #333 0%, #444 100%);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }

        .video-section h2 {
            font-size: 24px;
            color: #00ff00;
            margin-bottom: 20px;
        }

        .video-container {
            position: relative;
            width: 100%;
            max-width: 560px;
            margin: 0 auto;
        }

        .video-container iframe {
            width: 100%;
            height: 315px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        }

        .footer {
            text-align: center;
            padding: 25px;
            background: linear-gradient(135deg, #00aa00 0%, #00ff00 100%);
            border-radius: 10px;
            margin-top: 40px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }

        .footer p {
            font-size: 16px;
            color: #000;
            font-weight: 500;
        }

        /* Responsive Design */
        @media(max-width: 1024px) {
            .headchild {
                width: 100%;
            }
            
            .ingredients, .instructions {
                width: 100%;
                margin-right: 0;
                margin-bottom: 20px;
            }
            
            .Recipe {
                flex-direction: column;
            }
        }

        @media(max-width: 768px) {
            .nav-links {
                display: none;
                position: absolute;
                top: 70px;
                right: 20px;
                background: #1b1b1b;
                flex-direction: column;
                width: 200px;
                padding: 15px;
                border-radius: 10px;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
                z-index: 1001;
            }

            .nav-links.mobile {
                display: flex;
            }

            .menu-icon {
                display: block;
            }

            .container {
                width: 95%;
                padding: 15px;
            }

            .head {
                padding: 20px;
            }

            .recipe-image {
                height: 300px;
            }

            .about-section h2 {
                font-size: 26px;
            }

            .chef-quote {
                flex-direction: column;
                text-align: center;
            }

            .chef-icon {
                margin-right: 0;
                margin-bottom: 15px;
            }
        }

        @media(max-width: 480px) {
            .head {
                padding: 15px;
            }
            
            .recipe-image {
                height: 250px;
            }
            
            .about-section h2 {
                font-size: 22px;
            }
            
            .recipe-meta {
                flex-direction: column;
                gap: 10px;
            }
            
            .ingredients, .instructions {
                padding: 20px;
            }
            
            .items {
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }
            
            .measure {
                align-self: flex-end;
            }
        }

        /* Animation for save button */
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        .save-pulse {
            animation: pulse 0.5s ease;
        }

        /* Scroll to top button */
        .scroll-top {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: #00ff00;
            color: #000;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
            cursor: pointer;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s;
            z-index: 999;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }

        .scroll-top.show {
            opacity: 1;
            visibility: visible;
        }

        .scroll-top:hover {
            background: #00cc00;
            transform: translateY(-3px);
        }

        /* Custom recipe styling */
        .custom-recipe-note {
            background: rgba(0, 255, 0, 0.1);
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            border-left: 4px solid #00ff00;
        }

        .no-ingredients {
            text-align: center;
            color: #888;
            font-style: italic;
            padding: 20px;
        }
    </style>
</head>
<body>
    <header>
        <nav>
            <div class="app-icon">
                <span class="app-name">
                    <img src="/images/appLogo/headerLogo.png" alt="Recipe App Logo" style="height: 50px;">
                </span>
            </div>
            <div class="menu-icon" id="menuIcon">&#9776;</div>
            <ul class="nav-links" id="navLinks">
                <li><a href="/home"><i class="fas fa-home"></i> Home</a></li>
                <li><a href="/home/recipe"><i class="fas fa-utensils"></i> Recipes</a></li>
                <li><a href="/home/account"><i class="fas fa-user"></i> Account</a></li>
                <li><a href="/home/leaderBoard"><i class="fas fa-trophy"></i> Leader-Board</a></li>
                <li><a href="/home/aboutus"><i class="fas fa-info-circle"></i> About</a></li>
            </ul>
        </nav>
    </header>

    <div class="container">
        <div class="head">
            <div class="headchild">
                <!-- Handle image source for both local and external recipes -->
                <% 
                let imageSrc = data?.strMealThumb;
                // If it's a local recipe with just a filename, prepend the path
                if (imageSrc && !imageSrc.startsWith('http') && !imageSrc.startsWith('/')) {
                    imageSrc = '/images/recipes/' + imageSrc;
                }
                %>
                <img class="recipe-image" src="<%= imageSrc %>" alt="<%= data?.strMeal %>" onerror="this.src='https://via.placeholder.com/400x300/333/fff?text=Recipe+Image'">
            </div>
            <div class="headchild about-section">
                <h2><%= data?.strMeal %></h2>
                
                <div class="recipe-meta">
                    <div class="meta-item">
                        <i class="fas fa-clock"></i>
                        <span>30 mins</span>
                    </div>
                    <div class="meta-item">
                        <i class="fas fa-user-friends"></i>
                        <span>4 servings</span>
                    </div>
                    <div class="meta-item">
                        <i class="fas fa-fire"></i>
                        <span><%= data?.strCategory || 'Custom' %></span>
                    </div>
                </div>
                
                <p><%= data?.strInstructions?.substring(0, 150) ?? data?.dishDescription?.substring(0, 150) ?? 'No description available' %>...</p>
                
                <div class="likes">
                    <a id="saveRecipeBtn" href="#" onclick="saveRecipe()">
                        <i class="far fa-bookmark"></i> Save Recipe
                    </a>
                </div>
                
                <div class="chef-quote">
                    <img class="chef-icon" src="https://cdn-icons-png.flaticon.com/512/12331/12331588.png" alt="Chef Icon">
                    <h1><q>Cooking is a way of showing love and appreciation to those you care about</q></h1>
                </div>
            </div>
        </div>

        <div class="Recipe">
            <div class="ingredients">
                <h2 class="section-title">Ingredients</h2>
                
                <% 
                let ingredients = [];
                let isExternalRecipe = false;
                
                // Check if this is an external API recipe (has strIngredient1 format)
                if (data?.strIngredient1 !== undefined && data.strIngredient1 !== '') {
                    isExternalRecipe = true;
                    // External API recipe - use the standard format
                    for (let i = 1; i <= 20; i++) {
                        const ingredient = data[`strIngredient${i}`];
                        const measure = data[`strMeasure${i}`];
                        
                        if (ingredient && ingredient.trim() !== "") {
                            ingredients.push({ 
                                measure: measure?.trim() ?? '', 
                                ingredient: ingredient?.trim() ?? '',
                                isExternal: true
                            });
                        }
                    }
                } else if (data?.dishIngredients && Array.isArray(data.dishIngredients)) {
                    // Local database recipe - it's already an array
                    isExternalRecipe = false;
                    
                    data.dishIngredients.forEach(part => {
                        if (part && part.trim() !== "") {
                            ingredients.push({
                                measure: '',
                                ingredient: part.trim(),
                                isExternal: false
                            });
                        }
                    });
                } else if (data?.dishIngredients && typeof data.dishIngredients === 'string') {
                    // If dishIngredients is a string (fallback), split by dots
                    isExternalRecipe = false;
                    const ingredientParts = data.dishIngredients.split('.');
                    ingredientParts.forEach(part => {
                        if (part && part.trim() !== "") {
                            ingredients.push({
                                measure: '',
                                ingredient: part.trim(),
                                isExternal: false
                            });
                        }
                    });
                }
                
                // If no ingredients found
                if (ingredients.length === 0) {
                %>
                    <div class="no-ingredients">
                        <i class="fas fa-info-circle"></i>
                        <p>Ingredients information not available for this recipe</p>
                    </div>
                <%
                } else {
                    // Display ingredients
                    ingredients.forEach(ingredient => { 
                %>
                    <div class="items">
                        <div class="ingredient-item">
                            <img class="ingredient-icon" src="https://cdn-icons-png.flaticon.com/512/6785/6785304.png" alt="Ingredient Icon">
                            <span><%= ingredient?.ingredient ?? '' %></span>
                            <% if (ingredient?.isExternal && ingredient?.ingredient) { %>
                                <img class="ingredient-image" src="https://www.themealdb.com/images/ingredients/<%= ingredient?.ingredient ?? '' %>-Small.png" alt="<%= ingredient?.ingredient ?? '' %>" onerror="this.style.display='none'">
                            <% } %>
                        </div>
                        <% if (ingredient?.measure && ingredient.measure.trim() !== '') { %>
                            <span class="measure"><%= ingredient?.measure ?? '' %></span>
                        <% } %>
                    </div>
                <% 
                    });
                }
                %>
                
                <% if (!isExternalRecipe && ingredients.length > 0) { %>
                    <div class="custom-recipe-note">
                        <i class="fas fa-star"></i>
                        <strong>Custom Recipe</strong> - This is a user-submitted recipe
                    </div>
                <% } %>
            </div>
         
            <div class="instructions">
                <h2 class="section-title">Instructions</h2>
                <ol class="instruction-steps">
                   <% 
                   const instructions = data?.strInstructions ?? data?.dishDescription ?? '';
                   let instructionSentences = instructions?.split('.') ?? [];
                   
                   // Remove empty strings
                   instructionSentences = instructionSentences.filter(sentence => sentence?.trim() !== '');
                   
                   if (instructionSentences.length === 0) {
                   %>
                       <li>No detailed instructions available for this recipe.</li>
                   <%
                   } else {
                       instructionSentences.forEach(instruction => { 
                   %>
                        <li>
                            <%= instruction?.trim() ?? '' %>
                        </li>
                   <% 
                       });
                   }
                   %>
                </ol>
            </div>
        </div>

        <% if (data?.strYoutube) { %>
        <div class="video-section">
            <h2 class="section-title">Cooking Video</h2>
            <div class="video-container">
                <%
                let youtubeUrl = data.strYoutube;
                // Convert YouTube URL to embed format
                if (youtubeUrl.includes('youtube.com/watch?v=')) {
                    youtubeUrl = youtubeUrl.replace('watch?v=', 'embed/');
                } else if (youtubeUrl.includes('youtu.be/')) {
                    youtubeUrl = youtubeUrl.replace('youtu.be/', 'youtube.com/embed/');
                } else if (youtubeUrl.includes('youtube.com/embed/')) {
                    // Already in embed format
                } else {
                    // Try to extract video ID from various formats
                    const videoIdMatch = youtubeUrl.match(/(?:youtube\.com\/watch\?v=|youtu\.be\/|youtube\.com\/embed\/)([^&?\/]+)/);
                    if (videoIdMatch) {
                        youtubeUrl = 'https://www.youtube.com/embed/' + videoIdMatch[1];
                    }
                }
                %>
                <iframe src="<%= youtubeUrl %>" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
            </div>
        </div>
        <% } %>
    </div>
    
    <div class="footer">
        <p>&copy; 2024 Recipe Page. All Rights Reserved.</p>
    </div>

    <div class="scroll-top" id="scrollTop">
        <i class="fas fa-chevron-up"></i>
    </div>

    <script>
        // JavaScript code
        const menuIcon = document.getElementById('menuIcon');
        const navLinks = document.getElementById('navLinks');
        const scrollTopBtn = document.getElementById('scrollTop');
        const saveRecipeBtn = document.getElementById('saveRecipeBtn');
        
        // Get dish ID - handle both MongoDB IDs and external API IDs
        const dishId = '<%= data?.idMeal ?? data?._id ?? "" %>';
        const user = '<%= user?.savedPost ?? "" %>';
        let savedArray = user?.split(',') ?? [];
        let isSaved = false;

        // Mobile menu toggle
        menuIcon?.addEventListener('click', () => {
            navLinks?.classList.toggle('mobile');
        });

        // Close mobile menu when clicking on a link
        navLinks?.addEventListener('click', (e) => {
            if (e.target?.tagName === 'A') {
                navLinks?.classList.remove('mobile');
            }
        });

        // Scroll to top functionality
        window.addEventListener('scroll', () => {
            if (window.pageYOffset > 300) {
                scrollTopBtn?.classList.add('show');
            } else {
                scrollTopBtn?.classList.remove('show');
            }
        });

        scrollTopBtn?.addEventListener('click', () => {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });

        // Save recipe functionality
        function saveRecipe() {
            event?.preventDefault(); // Prevent default anchor tag behavior

            // Determine action based on current state
            if (isSaved) {
                // Already saved, so unsave
                unSaveDish();
            } else {
                // Not saved, so save
                saveDish();
            }
        }

        // Function to handle saving recipe
        function saveDish() {
            fetch('/saveDish', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ dishId })
            })
            .then(response => {
                if (response?.ok) {
                    return response.json();
                }
                throw new Error('Failed to save recipe');
            })
            .then(data => {
                // Update UI after successful save
                if (saveRecipeBtn) {
                    saveRecipeBtn.innerHTML = '<i class="fas fa-bookmark"></i> Saved';
                    saveRecipeBtn.classList.add('saved');
                    saveRecipeBtn.classList.add('save-pulse');
                    isSaved = true;
                    
                    // Remove animation class after animation completes
                    setTimeout(() => {
                        saveRecipeBtn.classList.remove('save-pulse');
                    }, 500);
                }
            })
            .catch(error => {
                console.error('Error saving recipe:', error);
                alert('Error saving recipe. Please try again.');
            });
        }

        // Function to unsave the dish
        function unSaveDish() {
            fetch('/unSaveDish', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ dishId })
            })
            .then(response => {
                if (response?.ok) {
                    return response.json();
                }
                throw new Error('Failed to unsave recipe');
            })
            .then(data => {
                // Update UI after successful unsave
                if (saveRecipeBtn) {
                    saveRecipeBtn.innerHTML = '<i class="far fa-bookmark"></i> Save Recipe';
                    saveRecipeBtn.classList.remove('saved');
                    saveRecipeBtn.classList.add('save-pulse');
                    isSaved = false;
                    
                    // Remove animation class after animation completes
                    setTimeout(() => {
                        saveRecipeBtn.classList.remove('save-pulse');
                    }, 500);
                }
            })
            .catch(error => {
                console.error('Error unsaving recipe:', error);
                alert('Error unsaving recipe. Please try again.');
            });
        }

        // Initialize page state
        window.onload = function() {
            if (savedArray?.includes(dishId)) {
                if (saveRecipeBtn) {
                    saveRecipeBtn.innerHTML = '<i class="fas fa-bookmark"></i> Saved';
                    saveRecipeBtn.classList.add('saved');
                    isSaved = true;
                }
            }
            
            // Add error handling for images
            const images = document.querySelectorAll('img');
            images.forEach(img => {
                img.onerror = function() {
                    this.style.display = 'none';
                };
            });
        };
    </script>
</body>
</html>