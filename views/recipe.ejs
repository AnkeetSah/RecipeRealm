<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recipe Page</title>
    <style>
        /* Reset some default browser styles */
        * {
            padding: 0;
            margin: 0;
            box-sizing: border-box;
        }

        body, h1, p, ul,  a {
            margin: 0;
            padding: 0;
            list-style: none;
            text-decoration: none;
            box-sizing: border-box;
        }

        /* General body styling */
        body {
            font-family: Arial, sans-serif;
            color: #fff;
            background-color: #121212;
        }

        /* Header styling */
        header {
            background-color: #1b1b1b;
            padding: 20px;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 24px;
            font-weight: bold;
            color: #00ff00;
        }

        .nav-links {
            display: flex;
            gap: 20px;
            margin-right: 20px; /* Move links a bit to the left */
        }

        .nav-links a {
            color: #fff;
            transition: color 0.3s;
        }

        .nav-links a:hover {
            color: #00ff00;
        }

        .menu-icon {
            display: none;
            font-size: 24px;
            cursor: pointer;
            color: #fff;
        }

        .menu-icon:hover {
            color: #00ff00;
        }

        /* Container styling */
        .container {
            width: 85%;
            margin: 100px auto 0;
            padding: 20px;
            background-color: #1b1b1b;
            color: #fff;
        }

        .head {
            display: flex;
            justify-content: space-between;
            background-color: #333;
            border: 1px solid #444;
            border-radius: 10px;
            padding: 20px;
            flex-wrap: wrap;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
        }

        .headchild {
            width: 48%;
        }

        img {
            width: 100%;
            height: 400px;
            border-radius: 10px;
        }

        .about-section {
            margin-top: 0;
            padding: 20px;
        }

        .about-section h2 {
            font-size: 28px;
            color: #00ff00;
            margin-bottom: 10px;
        }

        .likes {
            display: flex;
            
            margin-top: 20px;
        }

        .likes  a {
            color: white;
            cursor: pointer;
            padding: 10px 15px;
            background: #444;
            border-radius: 5px;
            transition: background 0.3s;
        }

        .likes p:hover {
            background: #555;
        }

        h1 {
            font-size: 24px;
            font-family: cursive;
            text-align: center;
            margin-left: 20px;
            margin-top: 30px;
            margin-bottom: 20px;
        }

        q {
            font-style: normal;
        }
        .chef{
            display: flex; margin-top: 40px; align-items: center;
        }

       

        .design {
            height: 220px;
            display: block;
            width: 120px;
        }

        .ingrediants {
            width: 40%;
            background-color: #333;
            min-height: 600px;
            max-height: auto;
            border-radius: 10px;
            padding: 30px;
            margin-right: 40px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
        }

        .instruction {
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
            width: 55%;
            background-color: #333;
            min-height: 600px;
            max-height: auto;
            border-radius: 10px;
            padding: 30px;
        }

        .Recipe {
            margin-top: 20px;
            height: auto;
            display: flex;
        }

        .items {
            margin-bottom: 25px;
            font-weight: bold;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .footer {
            text-align: center;
            padding: 20px;
            background-color: #00ff00;
            border-radius: 10px;
            margin-top: 20px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
        }

        .footer p {
            font-size: 14px;
            color: #000;
        }

        @media(max-width: 768px) {
            .nav-links {
                display: none;
            }

            .menu-icon {
                display: block;
            }

            .nav-links.mobile {
                display: flex;
                flex-direction: column;
                gap: 10px;
                background: #1b1b1b;
                position: absolute;
                top: 60px;
                right: 20px;
                padding: 20px;
                border-radius: 5px;
            }

            .nav-links.mobile a {
                color: #00ff00;
            }
        }

        @media(min-width: 769px) {
            .menu-icon {
                display: none;
            }
        }

        @media(max-width: 450px) {
            .head{
                background: white;
            }
            .headchild {
                width: 100%;
                
                color: #000;
            }
            .headchild img{
                height: 250px;
                border-radius: 20px;
                border: 4px solid #00ff00;

            }
           .chef{
            flex-wrap: wrap;
            margin-top: 0px;
            background: rgb(148, 248, 148);
            border-radius: 20px;
            height: auto;
            
           }
           .chef img{
            height: 60px;
            width: 30px;
            border: none ;
           display: inline;
           margin-left: 6px;
           }
           .chef h1{
            font-size: medium;
            display: inline;
            width: 180px;
           }
            .container{
                
                padding: 0px;
            }

            .about-section {
                margin-top: -15px;
            }
            .likes{
                margin-top: -5px;
                margin-bottom: 10px;
            }


            .Recipe{
                flex-wrap: wrap;
            }
            .ingrediants{
                width: 100%;
                margin: auto;
                height: auto;
                min-height: 400px;
                margin-bottom: 10px;
                background: white;
                color: #000;
            }
            .instruction{
                margin: auto;
                width: 100%;
                background: white;
                color: #000;
                font-weight: bold;

            }
            
        }
        ol {
            list-style: decimal; /* Ensure numbers are shown */
            margin-left: 20px; /* Optional: adjust margin */
        }
        
        li {
            margin-bottom: 10px; /* Optional: spacing between list items */
        }
        
        .instruction ol {
            list-style: decimal;
            margin-left: 20px; /* This is already applied */
        }
        
       
    </style>
</head>
<body>
    <header>
        <nav>
            <div class="logo">RecipeApp</div>
            <div class="menu-icon" id="menuIcon">&#9776;</div>
            <ul class="nav-links" id="navLinks">
                <li><a href="/home">Home</a></li>
                <li><a href="/home/recipe">Recipes</a></li>
                <li><a href="/home/account">Account</a></li>
                <li><a href="/home/leaderBoard">Leader-Board</a></li>
                <li><a href="/home/aboutus">About</a></li>
            </ul>
        </nav>
    </header>

    <div class="container">
        <div class="head">
            <div class="headchild">
                <div class="img"><img src="<%= data.strMealThumb %>" alt="Recipe Image"></div>
            </div>
            <div class="headchild about-section">
                <h2><%= data.strMeal %></h2>
                <div class="likes">
                    
                    <a id="saveRecipeBtn" href="#" onclick="saveRecipe()">Save</a>

                </div>
                <div class="chef" >
                    <img class="design" src="https://cdn-icons-png.flaticon.com/512/12331/12331588.png" alt="">
                    <h1><q>Cooking is a way of showing love and <br>appreciation to those you care about</q></h1>
                </div>
            </div>
        </div>

        <div class="Recipe">
            <div class="ingrediants">
                <h1 style="text-align: left;">Ingredients</h1>
                <% let ingredients = [];
                for (let i = 1; i <= 20; i++) {
                    const ingredient = data[`strIngredient${i}`];
                    const measure = data[`strMeasure${i}`];
                    
                    // Check if ingredient is not empty
                    if (ingredient.trim() !== "") {
                        ingredients.push({ measure: measure.trim(), ingredient: ingredient.trim() });
                    }
                }
                ingredients.forEach(ingredient => { %>
                    <div class="items">
                        <p style="display: flex; align-items: center;">
                            <img style="width: 25px; height: 25px; margin-right: 10px;" src="https://cdn-icons-png.flaticon.com/512/6785/6785304.png" alt="">
                            <%= ingredient.ingredient %>
                        </p>
                        <p><%= ingredient.measure %></p>
                    </div>
                <% }); %>
            </div>
         

            <div class="instruction">
                <h1 style="text-align: left;">Instructions</h1>
                <ol style="   margin-left: 20px;">
                   <% const instructions = data.strInstructions;%>
        
                   <% const instructionSentences = instructions.split('.'); %> 
                   <%  instructionSentences.length=instructionSentences.length-1;%>
                  <%  instructionSentences.forEach(instruction => { %>
                        <li style="margin-bottom: 20px;">
                            <%= instruction %>
                        </li>
                 <%   }) %>
                </ol>
            </div>
        </div>


        <div class="video-section" style="margin-top: 20px; text-align: center;">
            <iframe width="300" height="315" src="<%= data.strYoutube.replace('watch?v=', 'embed/') %>" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>

        

    </div>
    
    <div class="footer">
        <p>&copy; 2024 Recipe Page. All Rights Reserved.</p>
    </div>

    <script>
        // JavaScript code
        const menuIcon = document.getElementById('menuIcon');
        const navLinks = document.getElementById('navLinks');

        menuIcon.addEventListener('click', () => {
            navLinks.classList.toggle('mobile');
        });

        navLinks.addEventListener('click', (e) => {
            if (e.target.tagName === 'A') {
                navLinks.classList.remove('mobile');
            }
        });

        const saveRecipeBtn = document.getElementById('saveRecipeBtn');
        const dishId = '<%= data.idMeal %>'; // Get dish ID from server-side data
        const user='<%= user.savedPost %>';
        let savedArray= user.split(',');
        console.log(savedArray);
        function saveRecipe() {
            event.preventDefault(); // Prevent default anchor tag behavior

            // Determine action based on current state
            if (saveRecipeBtn.style.backgroundColor === 'black') {
                // Already saved, so unsave
                unSaveDish();
            } else {
                // Not saved, so save
                saveDish();
            }
        }


        // Function to handle saving recipe
          // Function to save the dish
          function saveDish() {
            fetch('/saveDish', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ dishId })
            })
            .then(response => {
                if (response.ok) {
                    return response.json(); // Parse response JSON
                }
                throw new Error('Failed to save recipe');
            })
            .then(data => {
                // Update UI after successful save
                saveRecipeBtn.textContent = 'Saved';
                saveRecipeBtn.style.backgroundColor = 'black';
                isSaved = true;
            })
            .catch(error => {
                console.error('Error saving recipe:', error);
                // Optionally show error message to user
            });
        }
        // Function to unsave the dish
        function unSaveDish() {
            fetch('/unSaveDish', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ dishId })
            })
            .then(response => {
                if (response.ok) {
                    return response.json(); // Parse response JSON
                }
                throw new Error('Failed to unsave recipe');
            })
            .then(data => {
                // Update UI after successful unsave
                saveRecipeBtn.textContent = 'Save';
                saveRecipeBtn.style.backgroundColor = '#444';
                isSaved = false;
            })
            .catch(error => {
                console.error('Error unsaving recipe:', error);
                // Optionally show error message to user
            });
        }

        window.onload = function() {
            if(savedArray.includes(dishId)){
                saveRecipeBtn.textContent = 'Saved';
                saveRecipeBtn.style.backgroundColor = 'black';
            }
            else{
                saveRecipeBtn.style.backgroundColor = '#444';
            }
        };

    </script>
</body>
</html>
