<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recipe App - AI Recipe Generator</title>
    <link rel="icon" type="image/png" href="/images/appLogo/fav.png">
    <link rel="stylesheet" href="/css/header.css">
    <style>
        /* Global Styles */
        * {
            padding: 0;
            margin: 0;
            box-sizing: border-box;
        }

        body, h1, p, ul, li, a {
            margin: 0;
            padding: 0;
            list-style: none;
            text-decoration: none;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #ffffff;
            background: linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 100%);
            min-height: 100vh;
        }

        /* Main content wrapper */
        .main-content {
            margin-top: 100px;
            min-height: calc(100vh - 100px);
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 40px 20px;
            flex-direction: column;
            gap: 40px;
        }

        /* Enhanced Search Container */
        .search-container {
            background: black;
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.5);
            border: 1px solid rgba(0, 255, 0, 0.1);
            backdrop-filter: blur(10px);
            max-width: 600px;
            width: 100%;
            position: relative;
            overflow: hidden;
        }

        .search-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, transparent, #00ff00, transparent);
            animation: shimmer 3s infinite;
        }

        @keyframes shimmer {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }

        .form-title {
            text-align: center;
            font-size: 28px;
            font-weight: 300;
            color: #ffffff;
            margin-bottom: 10px;
            letter-spacing: 1px;
        }

        .form-subtitle {
            text-align: center;
            color: #00ff00;
            font-size: 16px;
            margin-bottom: 30px;
            font-weight: 500;
        }

        .dropdown-container {
            display: flex;
            flex-direction: column;
            gap: 25px;
            width: 100%;
        }

        .input-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .input-label {
            color: #00ff00;
            font-size: 14px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 5px;
        }

        .input-description {
            color: #888;
            font-size: 12px;
            margin-bottom: 10px;
            line-height: 1.4;
        }

        /* Enhanced Input Styles */
        .search-box, #recipeDropdown {
            width: 100%;
            padding: 16px 20px;
            border-radius: 12px;
            border: 2px solid rgba(0, 255, 0, 0.3);
            background: rgba(255, 255, 255, 0.05);
            color: #ffffff;
            font-size: 16px;
            transition: all 0.3s ease;
            font-family: inherit;
            outline: none;
            position: relative;
        }

        .search-box:focus, #recipeDropdown:focus {
            border-color: #00ff00;
            box-shadow: 0 0 20px rgba(0, 255, 0, 0.2);
            background: rgba(255, 255, 255, 0.08);
            transform: translateY(-1px);
        }

        .search-box::placeholder, #recipeDropdown::placeholder {
            color: #666;
            transition: opacity 0.3s ease;
        }

        .search-box:focus::placeholder, #recipeDropdown:focus::placeholder {
            opacity: 0.6;
        }

        /* Enhanced Button Styles */
        .search-btn {
            padding: 18px 30px;
            border: none;
            border-radius: 50px;
            background: linear-gradient(135deg, #00ff00 0%, #00cc00 100%);
            color: #000000;
            cursor: pointer;
            font-size: 18px;
            font-weight: 600;
            margin-top: 20px;
            transition: all 0.3s ease;
            width: 100%;
            text-transform: uppercase;
            letter-spacing: 1px;
            box-shadow: 0 8px 25px rgba(0, 255, 0, 0.3);
            position: relative;
            overflow: hidden;
        }

        .search-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .search-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(0, 255, 0, 0.4);
        }

        .search-btn:hover::before {
            left: 100%;
        }

        .search-btn:active {
            transform: translateY(-1px);
        }

        /* Enhanced Dropdown Styles */
        .dropdown {
            position: relative;
            width: 100%;
        }

        .dropdown-list {
            display: none;
            position: absolute;
            background: linear-gradient(135deg, #2a2a2a 0%, #1e1e1e 100%);
            border: 2px solid rgba(0, 255, 0, 0.3);
            border-radius: 12px;
            z-index: 1000;
            max-height: 200px;
            overflow-y: auto;
            width: 100%;
            margin-top: 5px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(10px);
        }

        .dropdown-list::-webkit-scrollbar {
            width: 6px;
        }

        .dropdown-list::-webkit-scrollbar-track {
            background: #1a1a1a;
            border-radius: 3px;
        }

        .dropdown-list::-webkit-scrollbar-thumb {
            background: #00ff00;
            border-radius: 3px;
        }

        .dropdown-item {
            padding: 15px 20px;
            color: #ffffff;
            cursor: pointer;
            transition: all 0.3s ease;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
            font-weight: 500;
        }

        .dropdown-item:last-child {
            border-bottom: none;
        }

        .dropdown-item:hover {
            background: linear-gradient(135deg, #00ff00 0%, #00cc00 100%);
            color: #000000;
            transform: translateX(5px);
        }

        /* Sample ingredients styling */
        .sample-ingredients {
            background: rgba(0, 255, 0, 0.1);
            border: 1px solid rgba(0, 255, 0, 0.3);
            border-radius: 10px;
            padding: 15px;
            margin-top: 10px;
        }

        .sample-title {
            color: #00ff00;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            margin-bottom: 8px;
        }

        .sample-text {
            color: #ccc;
            font-size: 14px;
            line-height: 1.4;
            font-style: italic;
        }

        /* Loading animation */
        .loading-overlay {
            display: none;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            border-radius: 20px;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            gap: 20px;
            z-index: 1001;
        }

        .loading-spinner {
            width: 50px;
            height: 50px;
            border: 3px solid rgba(0, 255, 0, 0.3);
            border-top: 3px solid #00ff00;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        .loading-text {
            color: #00ff00;
            font-size: 16px;
            font-weight: 500;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Recipe Display Styles */
        .recipe-display {
            display: none;
            background: black;
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.5);
            border: 1px solid rgba(0, 255, 0, 0.1);
            backdrop-filter: blur(10px);
            max-width: 800px;
            width: 100%;
            position: relative;
            overflow: hidden;
            margin-top: 20px;
            animation: fadeIn 0.5s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .recipe-display::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, transparent, #00ff00, transparent);
            animation: shimmer 3s infinite;
        }

        .recipe-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .recipe-title {
            font-size: 32px;
            color: #00ff00;
            margin-bottom: 10px;
            font-weight: 600;
        }

        .recipe-meta {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .meta-item {
            background: rgba(0, 255, 0, 0.1);
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 500;
        }

        /* Tab Navigation Styles */
        .recipe-tabs {
            display: flex;
            justify-content: center;
            margin-bottom: 30px;
            gap: 10px;
            flex-wrap: wrap;
        }

        .tab-btn {
            padding: 12px 24px;
            background: rgba(0, 255, 0, 0.1);
            border: 1px solid rgba(0, 255, 0, 0.3);
            border-radius: 25px;
            color: #ffffff;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            font-size: 14px;
        }

        .tab-btn:hover {
            background: rgba(0, 255, 0, 0.2);
            transform: translateY(-2px);
        }

        .tab-btn.active {
            background: linear-gradient(135deg, #00ff00 0%, #00cc00 100%);
            color: #000000;
            box-shadow: 0 4px 15px rgba(0, 255, 0, 0.3);
        }

        .tab-content {
            display: none;
            animation: fadeIn 0.5s ease-in-out;
        }

        .tab-content.active {
            display: block;
        }

        /* Tab Content Styles */
        .ingredients-list, .instructions-list, .tips-list {
            padding-left: 20px;
        }

        .ingredient-item, .instruction-item, .tip-item {
            margin-bottom: 10px;
            padding-left: 10px;
            position: relative;
        }

        .ingredient-item::before, .instruction-item::before, .tip-item::before {
            content: '•';
            color: #00ff00;
            position: absolute;
            left: -10px;
        }

        .instruction-item {
            counter-increment: step-counter;
            margin-bottom: 15px;
        }

        .instruction-item::before {
            content: counter(step-counter) ".";
            color: #00ff00;
            font-weight: bold;
            position: absolute;
            left: -25px;
        }

        .instructions-list {
            counter-reset: step-counter;
        }

        .nutrition-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 10px;
        }

        .nutrition-item {
            background: rgba(0, 255, 0, 0.1);
            padding: 15px;
            border-radius: 10px;
            text-align: center;
        }

        .nutrition-value {
            font-size: 18px;
            font-weight: 600;
            color: #00ff00;
        }

        .nutrition-label {
            font-size: 12px;
            text-transform: uppercase;
            margin-top: 5px;
        }

        .back-button {
            display: block;
            width: 200px;
            margin: 30px auto 0;
            padding: 12px 20px;
            background: linear-gradient(135deg, #00ff00 0%, #00cc00 100%);
            color: #000;
            text-align: center;
            border-radius: 50px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .back-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 255, 0, 0.4);
        }

        /* Responsive Styles */
        @media (max-width: 600px) {
            .nav-links.mobile {
                display: flex;
                flex-direction: column;
                gap: 10px;
                background: #000;
                position: absolute;
                top: 60px;
                right: 20px;
                padding: 20px;
                border-radius: 5px;
            }

            .nav-links.mobile a {
                color: #00ff00;
            }

            .nav-links {
                display: none;
            }

            .menu-icon {
                display: block;
            }

            .main-content {
                padding: 20px 15px;
            }

            .search-container, .recipe-display {
                padding: 30px 25px;
            }

            .form-title, .recipe-title {
                font-size: 24px;
            }

            .form-subtitle {
                font-size: 14px;
            }

            .dropdown-container {
                gap: 20px;
            }

            .search-box, #recipeDropdown {
                padding: 14px 16px;
                font-size: 15px;
            }

            .search-btn {
                padding: 16px 25px;
                font-size: 16px;
            }

            .dropdown-list {
                max-height: 150px;
            }

            .dropdown-item {
                padding: 12px 16px;
            }

            .recipe-meta {
                flex-direction: column;
                align-items: center;
            }

            .nutrition-grid {
                grid-template-columns: 1fr;
            }

            .recipe-tabs {
                flex-direction: column;
                align-items: center;
            }

            .tab-btn {
                width: 100%;
                max-width: 200px;
                text-align: center;
            }
        }

        @media (max-width: 480px) {
            .search-container, .recipe-display {
                padding: 25px 20px;
                margin: 0 10px;
            }

            .form-title, .recipe-title {
                font-size: 22px;
            }

            .input-label {
                font-size: 13px;
            }

            .search-box, #recipeDropdown {
                padding: 12px 15px;
                font-size: 14px;
            }

            .search-btn {
                padding: 14px 20px;
                font-size: 15px;
            }
        }
    </style>
</head>
<body>
    <%- include("./header") %>

    <div class="main-content">
        <form class="search-container" method="post" onsubmit="showLoading()">
            <h1 class="form-title">AI Recipe Generator</h1>
            <p class="form-subtitle">Create personalized recipes with artificial intelligence</p>
            
            <div class="dropdown-container">
                <div class="input-group">
                    <label class="input-label" for="dishInput">Ingredients</label>
                    <p class="input-description">Enter ingredients separated by commas (e.g., chicken, rice, onions)</p>
                    <input type="text" class="search-box" name="dish" id="dishInput" placeholder="Enter your ingredients..." value="chicken, rice, onions, garlic, bell peppers, soy sauce">
                    <div class="sample-ingredients">
                        <div class="sample-title">Popular combinations:</div>
                        <div class="sample-text">• Pasta, tomatoes, basil, garlic, cheese<br>• Chicken, lemon, herbs, potatoes<br>• Rice, vegetables, soy sauce, ginger</div>
                    </div>
                </div>

                <div class="input-group">
                    <label class="input-label" for="recipeDropdown">Language Preference</label>
                    <p class="input-description">Select the language for your recipe instructions</p>
                    <div class="dropdown">
                        <input type="text" id="recipeDropdown" name="language" value="English" placeholder="Choose language..." onfocus="showDropdown()" oninput="filterDropdown()" autocomplete="off">
                        <div class="dropdown-list" id="dropdownList">
                            <div class="dropdown-item" data-value="Hindi">Hindi</div>
                            <div class="dropdown-item" data-value="English">English</div>
                            <div class="dropdown-item" data-value="Bengali">Bengali</div>
                            <div class="dropdown-item" data-value="Telugu">Telugu</div>
                            <div class="dropdown-item" data-value="Marathi">Marathi</div>
                            <div class="dropdown-item" data-value="Tamil">Tamil</div>
                            <div class="dropdown-item" data-value="Urdu">Urdu</div>
                            <div class="dropdown-item" data-value="Gujarati">Gujarati</div>
                            <div class="dropdown-item" data-value="Malayalam">Malayalam</div>
                            <div class="dropdown-item" data-value="Kannada">Kannada</div>
                            <div class="dropdown-item" data-value="Odia">Odia</div>
                            <div class="dropdown-item" data-value="Punjabi">Punjabi</div>
                            <div class="dropdown-item" data-value="Assamese">Assamese</div>
                            <div class="dropdown-item" data-value="Maithili">Maithili</div>
                            <div class="dropdown-item" data-value="Sanskrit">Sanskrit</div>
                            <div class="dropdown-item" data-value="Dogri">Dogri</div>
                            <div class="dropdown-item" data-value="Kashmiri">Kashmiri</div>
                            <div class="dropdown-item" data-value="Sindhi">Sindhi</div>
                            <div class="dropdown-item" data-value="Manipuri">Manipuri</div>
                            <div class="dropdown-item" data-value="Santhali">Santhali</div>
                            <div class="dropdown-item" data-value="Spanish">Spanish</div>
                            <div class="dropdown-item" data-value="French">French</div>
                            <div class="dropdown-item" data-value="Chinese">Chinese</div>
                            <div class="dropdown-item" data-value="Arabic">Arabic</div>
                            <div class="dropdown-item" data-value="Russian">Russian</div>
                            <div class="dropdown-item" data-value="German">German</div>
                            <div class="dropdown-item" data-value="Japanese">Japanese</div>
                            <div class="dropdown-item" data-value="Korean">Korean</div>
                            <div class="dropdown-item" data-value="Italian">Italian</div>
                        </div>
                    </div>
                </div>

                <div class="input-group">
                    <label class="input-label" for="countryInput">Cuisine Style</label>
                    <p class="input-description">Specify the regional cuisine style (e.g., Indian, Italian, Mexican)</p>
                    <input type="text" class="search-box" value="India" name="country" id="countryInput" placeholder="Enter cuisine style...">

                     <label style="margin-top: 5px;" class="input-label" for="countryInput">Dish You have in mind</label>
                    <p class="input-description">if any dihs you want to make with this items you can mention also</p>
                 <input type="text" class="search-box" value="" name="dishName" id="dishNameInput" placeholder="Any Dish you want...">

                </div>

                <input type="submit" class="search-btn" value="Generate Recipe">
            </div>

            <div class="loading-overlay" id="loadingOverlay">
                <div class="loading-spinner"></div>
                <div class="loading-text">Generating your personalized recipe...</div>
            </div>
        </form>

        <!-- Recipe Display Section -->
        <div class="recipe-display" id="recipeDisplay">
            <div class="recipe-header">
                <h2 class="recipe-title" id="recipeTitle">The Universal Umami Noodle Bowl</h2>
                <div class="recipe-meta">
                    <div class="meta-item">Prep Time: <span id="cookingTime">25 minutes</span></div>
                    <div class="meta-item">Cuisine: <span id="recipeCuisine">Indian</span></div>
                </div>
            </div>

            <!-- Tab Navigation -->
            <div class="recipe-tabs">
                <button class="tab-btn active" data-tab="ingredients">Ingredients</button>
                <button class="tab-btn" data-tab="instructions">Instructions</button>
                <button class="tab-btn" data-tab="nutrition">Nutrition</button>
                <button class="tab-btn" data-tab="tips">Tips & Variations</button>
            </div>

            <!-- Tab Contents -->
            <div class="tab-content active" id="ingredients-tab">
                <h3 class="section-title">Ingredients</h3>
                <ul class="ingredients-list" id="ingredientsList">
                    <!-- Ingredients will be populated here -->
                </ul>
            </div>

            <div class="tab-content" id="instructions-tab">
                <h3 class="section-title">Instructions</h3>
                <ol class="instructions-list" id="instructionsList">
                    <!-- Instructions will be populated here -->
                </ol>
            </div>

            <div class="tab-content" id="nutrition-tab">
                <h3 class="section-title">Nutritional Information</h3>
                <div class="nutrition-grid" id="nutritionGrid">
                    <!-- Nutritional info will be populated here -->
                </div>
            </div>

            <div class="tab-content" id="tips-tab">
                <h3 class="section-title">Tips & Variations</h3>
                <ul class="tips-list" id="tipsList">
                    <!-- Tips will be populated here -->
                </ul>
            </div>

            <div class="back-button" id="backButton">Generate Another Recipe</div>
        </div>
    </div>

    <script>
        const form = document.querySelector('form');
        const dishInput = document.getElementById('dishInput');
        const dishNameInput = document.getElementById('dishNameInput');
        const languageInput = document.getElementById('recipeDropdown');
        const countryInput = document.getElementById('countryInput');
        const loadingOverlay = document.getElementById('loadingOverlay');
        const dropdownList = document.getElementById('dropdownList');
        
        // Recipe display elements
        const recipeDisplay = document.getElementById('recipeDisplay');
        const recipeTitle = document.getElementById('recipeTitle');
        const cookingTime = document.getElementById('cookingTime');
        const recipeCuisine = document.getElementById('recipeCuisine');
        const ingredientsList = document.getElementById('ingredientsList');
        const instructionsList = document.getElementById('instructionsList');
        const nutritionGrid = document.getElementById('nutritionGrid');
        const tipsList = document.getElementById('tipsList');
        const backButton = document.getElementById('backButton');

        // Tab functionality
        const tabBtns = document.querySelectorAll('.tab-btn');
        const tabContents = document.querySelectorAll('.tab-content');

        // Tab switching function
        function switchTab(tabName) {
            // Remove active class from all tabs and contents
            tabBtns.forEach(btn => btn.classList.remove('active'));
            tabContents.forEach(content => content.classList.remove('active'));
            
            // Add active class to clicked tab and corresponding content
            document.querySelector(`.tab-btn[data-tab="${tabName}"]`).classList.add('active');
            document.getElementById(`${tabName}-tab`).classList.add('active');
        }

        // Add click event listeners to tabs
        tabBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                switchTab(btn.getAttribute('data-tab'));
            });
        });

        form.addEventListener('submit', async function(e) {
            e.preventDefault(); // Prevent form from submitting normally

            const formData = {
                ingredients: dishInput.value.trim(),
                language: languageInput.value.trim(),
                cuisine: countryInput.value.trim(),
                dishName: dishNameInput.value.trim()
            };

            console.log("Form Data Submitted:", formData);

            // Show loading overlay
            loadingOverlay.style.display = 'flex';

            try {
                // Call your backend API to generate recipe via AI
                const aiResponse = await fetch('/home/recipe/aiResponse', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                if (!aiResponse.ok) {
                    throw new Error(`Server Error: ${aiResponse.status}`);
                }

                const recipeData = await aiResponse.json();
                console.log("Recipe Generated:", recipeData);
                
                // Display the recipe
                displayRecipe(recipeData.recipeObject);
                
            } catch (error) {
                console.error("Error generating/saving recipe:", error);
                alert('Something went wrong. Check console for details.');
            } finally {
                loadingOverlay.style.display = 'none'; // hide loading overlay
            }
        });

        // Function to display the recipe
        function displayRecipe(recipe) {
            // Set basic recipe info
            recipeTitle.textContent = recipe.dishName;
            cookingTime.textContent = recipe.cookingTime;
            recipeCuisine.textContent = countryInput.value.trim() || "International";
            
            // Populate ingredients
            ingredientsList.innerHTML = '';
            recipe.ingredients.forEach(ingredient => {
                const li = document.createElement('li');
                li.className = 'ingredient-item';
                li.textContent = `${ingredient.item} - ${ingredient.measurement}`;
                ingredientsList.appendChild(li);
            });
            
            // Populate instructions
            instructionsList.innerHTML = '';
            recipe.instructions.forEach(instruction => {
                const li = document.createElement('li');
                li.className = 'instruction-item';
                li.textContent = instruction;
                instructionsList.appendChild(li);
            });
            
            // Populate nutritional information
            nutritionGrid.innerHTML = '';
            recipe.nutritionalInformation.forEach(nutrition => {
                const div = document.createElement('div');
                div.className = 'nutrition-item';
                
                // Extract value and label
                const parts = nutrition.split(':');
                if (parts.length === 2) {
                    div.innerHTML = `
                        <div class="nutrition-value">${parts[1].trim()}</div>
                        <div class="nutrition-label">${parts[0].trim()}</div>
                    `;
                } else {
                    div.innerHTML = `
                        <div class="nutrition-value">${nutrition}</div>
                    `;
                }
                
                nutritionGrid.appendChild(div);
            });
            
            // Populate tips
            tipsList.innerHTML = '';
            recipe.tips.forEach(tip => {
                const li = document.createElement('li');
                li.className = 'tip-item';
                li.textContent = tip;
                tipsList.appendChild(li);
            });
            
            // Show the recipe display below the form (don't hide the form)
            recipeDisplay.style.display = 'block';
            
            // Reset to ingredients tab
            switchTab('ingredients');
            
            // Scroll to the recipe display
            recipeDisplay.scrollIntoView({ behavior: 'smooth' });
        }

        // Back button functionality - scroll back to form
        backButton.addEventListener('click', function() {
            form.scrollIntoView({ behavior: 'smooth' });
        });

        // Dropdown functionality
        function showDropdown() {
            dropdownList.style.display = 'block';
        }

        function filterDropdown() {
            const filter = languageInput.value.toLowerCase();
            const items = dropdownList.getElementsByClassName('dropdown-item');
            
            for (let i = 0; i < items.length; i++) {
                const text = items[i].textContent || items[i].innerText;
                if (text.toLowerCase().indexOf(filter) > -1) {
                    items[i].style.display = "";
                } else {
                    items[i].style.display = "none";
                }
            }
        }

        // Close dropdown when clicking outside
        document.addEventListener('click', function(e) {
            if (!e.target.matches('#recipeDropdown')) {
                dropdownList.style.display = 'none';
            }
        });

        // Select dropdown item
        dropdownList.addEventListener('click', function(e) {
            if (e.target.classList.contains('dropdown-item')) {
                languageInput.value = e.target.getAttribute('data-value');
                dropdownList.style.display = 'none';
            }
        });
    </script>
</body>
</html>